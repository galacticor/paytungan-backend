stages:
  - linter
  - test
  - deploy-dev
  # - deploy-prod

linter:
  image: python:3.8
  stage: linter
  before_script:
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
  when: on_success
  script:
    - black . --check

test:
  image: python:3.8
  stage: test
  before_script:
    - pip install -r requirements.txt
    - python manage.py makemigrations
    - python manage.py migrate
  when: on_success
  script:
    - python manage.py test

deploy-dev:
  image: ruby:2.7.1
  stage: deploy-dev
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APPNAME --api-key=$HEROKU_APIKEY
    - export HEROKU_API_KEY=$HEROKU_APIKEY
  environment:
    name: production
    url: $HEROKU_APP_HOST
  only:
    - main

sonar-scanner-dev:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: test
  script:
    - sonar-scanner
      -Dsonar.host.url=https://sonarqube.cs.ui.ac.id
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.branch.target=staging
  allow_failure: true
  except:
    - prod
    - main

sonar-scanner:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: test
  script:
    - sonar-scanner
      -Dsonar.host.url=https://sonarqube.cs.ui.ac.id
      -Dsonar.login=$SONARQUBE_TOKEN
  allow_failure: true
  only:
    - main
    - prod
